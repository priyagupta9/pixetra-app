{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitik\\\\OneDrive\\\\Desktop\\\\pixetranewtest-main\\\\src\\\\component\\\\LoginInfoPage\\\\LoginInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport logo from \"../images/512.png\";\nimport '../allLogin.css';\nimport email from \"./img/email.png\";\nimport person from \"./img/person.png\";\nimport \"../OtpPage/styles/WhiteBtn.css\";\nimport \"../OtpPage/styles/BlueBtn.css\";\nimport \"../OtpPage/styles/Phone.css\";\nimport mobile from \"../images/mobile.png\";\nimport \"./styles/Login.css\";\nimport { useNavigate } from 'react-router-dom';\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginInfo() {\n  _s();\n\n  const [usernameerror, setusernameError] = useState(\"\");\n  const [emailerror, setEmailError] = useState(\"\");\n  const [phoneerror, setphoneError] = useState(\"\");\n  const [inputValues, setInputValues] = useState({\n    username: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n\n  const inputEvent = e => {\n    inp(e);\n    validateName(e);\n    validateEmail(e);\n    validatePhone(e);\n  };\n\n  function validateName(e) {\n    let {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"username\") {\n      if (value.length < 3 && value !== \"\") {\n        setusernameError(\"Username must be of minimun 3 chracters\");\n      }\n\n      if (!validator.isAlpha(value) && value !== \"\") {\n        setusernameError(\"Usename can only contain chracters!\");\n      } else {\n        setusernameError(\"\");\n      }\n    }\n  }\n\n  function validateEmail(e) {\n    let {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"email\") {\n      if (!validator.isEmail(value) && value !== \"\") {\n        setEmailError(\"Enter Valid Email!\");\n      } else {\n        setEmailError(\"\");\n      }\n    }\n  }\n\n  function validatePhone(e) {\n    let {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"phone\") {\n      if (!validator.isNumeric(value) && value !== \"\") {\n        setphoneError(\"Enter Valid Phone Number\");\n      } else if (value.length !== 10 && value !== \"\") {\n        setphoneError(\"Enter Valid Phone Number\");\n      } else {\n        setphoneError(\"\");\n      }\n    }\n  }\n\n  function inp(e) {\n    console.log(inputValues);\n    let {\n      name,\n      value\n    } = e.target;\n    setInputValues(previousValue => {\n      return { ...previousValue,\n        [name]: value\n      };\n    });\n  }\n\n  const Navigate = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (inputValues.username === \"\") {\n      setusernameError(\"Please enter your username\");\n      return false;\n    } else if (inputValues.email === \"\") {\n      setEmailError(\"Please enter your Email ID\");\n      return false;\n    } else if (inputValues.phone === \"\") {\n      setphoneError(\"Please enter your Phone Number\");\n      return false;\n    } else if (usernameerror !== \"\" || emailerror !== \"\" || phoneerror !== \"\") {\n      return false;\n    } else {\n      Navigate(\"/otplogin\", {\n        state: {\n          phoneNumber: inputValues.phone,\n          name: inputValues.username\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginInfo-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: person,\n            alt: \"phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userName\",\n            placeholder: \"Enter Your Name\",\n            name: \"username\",\n            value: inputValues.username,\n            onChange: e => inputEvent(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: usernameerror\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: email,\n            alt: \"phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userEmail\",\n            placeholder: \"Enter Email ID\",\n            name: \"email\",\n            value: inputValues.email,\n            autoComplete: true,\n            onChange: e => inputEvent(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: emailerror\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: mobile,\n            alt: \"phone\",\n            className: \"circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nr-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"+91\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"--\",\n              children: \"---------\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              pattern: \"[0-9]*\",\n              label: \"Enter Phone Number\",\n              title: \"Number\",\n              required: true,\n              name: \"phone\",\n              maxLength: \"10\",\n              value: inputValues.phone,\n              onChange: e => inputEvent(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: phoneerror\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"blue-box sub\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"blue-text\",\n          children: \"CONTINUE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: \"Need help?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginInfo, \"u3i6XT4B/hPOq83Mz22GH6aCOU4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginInfo;\nexport default LoginInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInfo\");","map":{"version":3,"sources":["C:/Users/nitik/OneDrive/Desktop/pixetranewtest-main/src/component/LoginInfoPage/LoginInfo.jsx"],"names":["React","useState","logo","email","person","mobile","useNavigate","validator","LoginInfo","usernameerror","setusernameError","emailerror","setEmailError","phoneerror","setphoneError","inputValues","setInputValues","username","phone","inputEvent","e","inp","validateName","validateEmail","validatePhone","name","value","target","length","isAlpha","isEmail","isNumeric","console","log","previousValue","Navigate","handleSubmit","preventDefault","state","phoneNumber"],"mappings":"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","sourcesContent":["import React ,{ useState } from 'react';\r\nimport logo from \"../images/512.png\"\r\nimport '../allLogin.css';\r\nimport email from \"./img/email.png\";\r\nimport person from \"./img/person.png\"\r\nimport \"../OtpPage/styles/WhiteBtn.css\"\r\nimport \"../OtpPage/styles/BlueBtn.css\"\r\nimport \"../OtpPage/styles/Phone.css\"\r\nimport  mobile from \"../images/mobile.png\"\r\nimport \"./styles/Login.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport validator from 'validator'\r\n\r\nfunction LoginInfo() {\r\n\r\n  const [usernameerror,setusernameError] = useState(\"\");\r\n  const [emailerror,setEmailError] = useState(\"\");\r\n  const [phoneerror,setphoneError] = useState(\"\");\r\n  const [inputValues,setInputValues] = useState({\r\n  username:\"\",\r\n  email:\"\",\r\n  phone:\"\"\r\n  });\r\n\r\n  \r\n  const inputEvent = (e) => {\r\n  inp(e);\r\n  validateName(e);\r\n  validateEmail(e);\r\n  validatePhone(e);\r\n  }\r\n\r\n  function validateName(e){\r\n    let {name,value} = e.target;\r\n    if(name === \"username\"){\r\n      if(value.length < 3 && (value !== \"\")){\r\n        setusernameError(\"Username must be of minimun 3 chracters\")\r\n      }\r\n      if(!validator.isAlpha(value) && (value !== \"\")){\r\n        setusernameError(\"Usename can only contain chracters!\")\r\n      }else{\r\n        setusernameError(\"\")\r\n      }\r\n  }\r\n}\r\n\r\n  function validateEmail(e){\r\n    let {name,value} = e.target;\r\n    if(name === \"email\"){\r\n      if(!validator.isEmail(value) && (value !== \"\")){\r\n        setEmailError(\"Enter Valid Email!\")\r\n      }else{\r\n        setEmailError(\"\")\r\n      }\r\n  }}\r\n\r\n  function validatePhone(e){\r\n    let {name,value} = e.target;\r\n    if(name === \"phone\"){\r\n      if(!validator.isNumeric(value) && (value !== \"\")){\r\n        setphoneError(\"Enter Valid Phone Number\")\r\n      }\r\n      else if(value.length !== 10 && (value !== \"\")){\r\n        setphoneError(\"Enter Valid Phone Number\")\r\n      }\r\n      else{\r\n        setphoneError(\"\")\r\n      }\r\n    }\r\n  }\r\n\r\n  function inp(e){\r\n    console.log(inputValues);\r\n    let {name,value} = e.target;\r\n\r\n    setInputValues((previousValue)=>{\r\n      return {\r\n        ...previousValue,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  const Navigate=useNavigate();\r\n\r\n  function handleSubmit(e){\r\n      e.preventDefault();\r\n\r\n      if(inputValues.username ===\"\"){\r\n        setusernameError(\"Please enter your username\");\r\n        return false;\r\n      }else if(inputValues.email ===\"\"){\r\n      setEmailError(\"Please enter your Email ID\");\r\n      return false;\r\n      }else if(inputValues.phone ===\"\"){\r\n        setphoneError(\"Please enter your Phone Number\");\r\n        return false;\r\n      }else if(usernameerror !==\"\" || emailerror !==\"\" || phoneerror !==\"\"){\r\n        return false;\r\n      }\r\n      else{\r\n        Navigate(\"/otplogin\", { state: { phoneNumber: inputValues.phone , name: inputValues.username} });\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div className='otp-page'>\r\n      <img src={logo} alt=\"logo\" className='logo'/>\r\n\r\n      <form className='loginInfo-form'>\r\n\r\n        <div className='input_box'>\r\n          <div className='white-box'>\r\n          <img src={person} alt=\"phone\" />\r\n            <input type=\"text\" id=\"userName\" placeholder='Enter Your Name' name='username' value={inputValues.username}\r\n              onChange={(e) => inputEvent(e)}></input>\r\n          </div>\r\n          <small>{usernameerror}</small>\r\n        </div>\r\n\r\n        <div className='input_box'>\r\n          <div className='white-box'>\r\n          <img src={email} alt=\"phone\" />\r\n            <input type=\"text\" id=\"userEmail\" placeholder='Enter Email ID' name='email' value={inputValues.email} autoComplete\r\n              onChange={(e) => inputEvent(e)}></input>\r\n          </div>\r\n          <small>{emailerror}</small>\r\n        </div>\r\n\r\n        <div className='input_box'>\r\n         <div className='white-box'>\r\n            <img src={mobile} alt=\"phone\" className='circle' />\r\n            <div className='nr-input'>\r\n            <span>+91</span>\r\n            <span className='--'>---------</span>\r\n                <input\r\n                    type=\"tel\"\r\n                    pattern='[0-9]*'\r\n                    label=\"Enter Phone Number\"\r\n                    title='Number'\r\n                    required\r\n                    name=\"phone\"\r\n                    maxLength=\"10\"\r\n                    value={inputValues.phone}\r\n                    onChange={(e) => inputEvent(e)}\r\n                />\r\n            </div>\r\n          </div>\r\n            <small>{phoneerror}</small>\r\n          </div>\r\n          <button className='blue-box sub' type='submit' onClick={handleSubmit}>\r\n          <p className='blue-text'>CONTINUE</p></button>\r\n           </form>\r\n\r\n           \r\n      <a href=\"/\">Need help?</a>\r\n    </div>\r\n  );\r\n  }\r\nexport default LoginInfo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}